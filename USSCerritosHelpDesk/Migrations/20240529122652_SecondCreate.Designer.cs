// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace USSCerritosHelpDesk.Migrations
{
    [DbContext(typeof(USSCerritosHelpDeskDbContext))]
    [Migration("20240529122652_SecondCreate")]
    partial class SecondCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Technical Support"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Software Issue"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Hardware Issue"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Network Issue"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Communications"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Security Incident"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Purchase and Procurement"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "User Training"
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Command"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Operations"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Sciences"
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemImageUrl = "https://m.media-amazon.com/images/I/51tlGzJRQlL._AC_UF1000,1000_QL80_.jpg",
                            ItemName = "Crystal Reports 2020",
                            ItemVersion = "version 14.3"
                        },
                        new
                        {
                            Id = 2,
                            ItemImageUrl = "https://pisces.bbystatic.com/image2/BestBuy_US/images/products/6498/6498483_sd.jpg;maxHeight=640;maxWidth=550",
                            ItemName = "Windows 11 Pro",
                            ItemVersion = "version 1321"
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("SolveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TicketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Solutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SolveDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketId = 1
                        },
                        new
                        {
                            Id = 2,
                            SolveDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketId = 2
                        },
                        new
                        {
                            Id = 3,
                            SolveDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketId = 3
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Open"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Awaiting Customer Review"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Resolved"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "ReOpened"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "Cancelled"
                        },
                        new
                        {
                            Id = 7,
                            StatusName = "Escalated"
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedToUserId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedToUserId = 1,
                            CategoryId = 0,
                            CommentDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 0,
                            Description = "Captain Freeman is the new commander of this starship please add her to all command functions",
                            Priority = "High",
                            StatusId = 1,
                            Title = "Add Captain Freeman to the Command Console",
                            UpdateDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            AssignedToUserId = 1,
                            CategoryId = 2,
                            CommentDate = new DateTime(2024, 5, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Description = "The printer in the main office is not printing documents.",
                            Priority = "Medium",
                            StatusId = 2,
                            Title = "Printer not working",
                            UpdateDate = new DateTime(2024, 5, 2, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            AssignedToUserId = 1,
                            CategoryId = 3,
                            CommentDate = new DateTime(2024, 5, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Description = "Remote users are unable to connect to the VPN.",
                            Priority = "High",
                            StatusId = 3,
                            Title = "Cannot connect to VPN",
                            UpdateDate = new DateTime(2024, 5, 3, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 103
                        },
                        new
                        {
                            Id = 4,
                            AssignedToUserId = 2,
                            CategoryId = 4,
                            CommentDate = new DateTime(2024, 5, 4, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Description = "Request to install new software on all department computers.",
                            Priority = "Low",
                            StatusId = 3,
                            Title = "Software installation request",
                            UpdateDate = new DateTime(2024, 5, 4, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 104
                        },
                        new
                        {
                            Id = 5,
                            AssignedToUserId = 2,
                            CategoryId = 5,
                            CommentDate = new DateTime(2024, 5, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Description = "The entire office is experiencing a network outage.",
                            Priority = "Critical",
                            StatusId = 4,
                            Title = "Network outage",
                            UpdateDate = new DateTime(2024, 5, 5, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 105
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.TicketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("TicketId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TicketItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            TicketId = 1,
                            UserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            TicketId = 2,
                            UserId = 0
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CommBageId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommBageId = "Dilligent444444",
                            DepartmentId = 1,
                            FirstName = "Paul",
                            LastName = "Patterson",
                            Role = "Engineer"
                        },
                        new
                        {
                            Id = 2,
                            CommBageId = "AB1234456USSC",
                            DepartmentId = 2,
                            FirstName = "Andy",
                            LastName = "Billups",
                            Role = "Lieutenant Commander"
                        },
                        new
                        {
                            Id = 3,
                            CommBageId = "BW123456USSC",
                            DepartmentId = 3,
                            FirstName = "Bingston",
                            LastName = "Winger, Jr",
                            Role = "Lieutenant Junior Grade"
                        },
                        new
                        {
                            Id = 4,
                            CommBageId = "BB123456USSC",
                            DepartmentId = 1,
                            FirstName = "Brad",
                            LastName = "Boimler",
                            Role = "Lieutenant Junior grade"
                        },
                        new
                        {
                            Id = 5,
                            CommBageId = "CF111111USSC",
                            DepartmentId = 1,
                            FirstName = "Carol",
                            LastName = "Freeman",
                            Role = "Captain"
                        },
                        new
                        {
                            Id = 6,
                            CommBageId = "BM123456USSC",
                            DepartmentId = 1,
                            FirstName = "Beckett",
                            LastName = "Mariner",
                            Role = "Ensign"
                        },
                        new
                        {
                            Id = 7,
                            CommBageId = "SR123456USSC",
                            DepartmentId = 1,
                            FirstName = "Sam",
                            LastName = "Rutherford",
                            Role = "Ensign"
                        },
                        new
                        {
                            Id = 8,
                            CommBageId = "TDV123456USSC",
                            DepartmentId = 3,
                            FirstName = "Tendi",
                            LastName = "D'Vana",
                            Role = "Lieutenant Junior grade"
                        });
                });

            modelBuilder.Entity("USSCerritosHelpDesk.Models.Solution", b =>
                {
                    b.HasOne("USSCerritosHelpDesk.Models.Ticket", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
